model5dyna_bg[i]= bgtest(model5dyna, order=i)$p.value
}
which(model5dyna_bg < 0.05)
model5dyna_bg
vif(model5dyna)
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5dyna$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5dyna$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5dyna, start = 1953, frequency = 3))
plot(ts(cons),col="red",main = "Fig 2: differenced fitted model and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5dyna$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5dyna),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5dyna$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5dyna$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
library(car)
library(forecast)
library(lmtest)
t38<-read.table("t38.txt",header=T,sep=" ")
cons<-t38$CONS
consTS <- ts(cons, start = 1953, frequency = 3)
inc<-t38$INC
incTS <- ts(inc, start = 1953, frequency = 3)
inflat<-t38$INFLAT
inflatTS <- ts(inflat, start = 1953, frequency = 3)
model5 <- lm (formula = cons ~ inc + inflat)
summary(model5)
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of model 5")
qqline(model5$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5), start = 1953, frequency = 3)
plot(consTS,col="red",main = "Fig 2: fitted model and original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("cons", "fit"),
col=c("red","blue"),lty=c(1,1),cex=0.5)
# Estimated residuals of model 5
plot(model5$residuals,type="p",main="Fig 3: Estimated residuals of model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5),main="Fig 4: Cook’s distances of model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of model 5")
# ACF of the estimated residuals of model 5
acf(model5$residuals, main = "Fig 6: ACF of the estimated residuals of model 5")
# VIF of model 5
vif(model5)
consD <- diff(cons)
incD <- diff(inc)
inflatD <- diff(inflat)
model5D<-lm(consD ~ incD + inflatD)
summary(model5D)
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5D$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5D$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5D, start = 1953, frequency = 3))
plot(ts(consD),col="red",main = "Fig 2: differenced fitted model and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5D$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5D),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5D$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5D$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
vif(model5D)
install.packages("lmtest")
library(lmtest)
model5_bg <- rep(NA,155)
# Breusch-Godfrey can be performed up to order:
# (sample size) - (number of estimated parameters) = 158-3 = 155
for (i in 1:155) {
model5_bg[i]= bgtest(model5D, order=i)$p.value
}
which(model5_bg > 0.05)
# Null hypothesis of no autocorrelation accepted with all lags
install.packages("lmtest")
n <- nrow(t38)
model5dyna <- lm(consTS[-1] ~ consTS[-n] + incTS[-1] + incTS[-n] +
inflatTS[-1] + inflatTS[-n])
summary(model5dyna)
n <- nrow(t38)
model5dyna <- lm(consTS[-1] ~ consTS[-n] + incTS[-1] + incTS[-n] +
inflatTS[-1] + inflatTS[-n])
summary(model5dyna)
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5dyna$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5dyna$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5dyna, start = 1953, frequency = 3))
plot(ts(cons),col="red",main = "Fig 2: differenced fitted model and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5dyna$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5dyna),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5dyna$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5dyna$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
library(lmtest)
model5dyna_bg <- rep(NA,152)
# Breusch-Godfrey can be performed up to order:
# (sample size) - (number of estimated parameters) = 158-6 = 152
for (i in 1:152) {
model5dyna_bg[i]= bgtest(model5dyna, order=i)$p.value
}
which(model5dyna_bg < 0.05)
model5dyna_bg
vif(model5dyna)
library(lmtest)
library(forecast)
model5dyna_bg <- rep(NA,152)
# Breusch-Godfrey can be performed up to order:
# (sample size) - (number of estimated parameters) = 158-6 = 152
for (i in 1:152) {
model5dyna_bg[i]= bgtest(model5dyna, order=i)$p.value
}
which(model5dyna_bg < 0.05)
model5dyna_bg
vif(model5dyna)
library(lmtest)
library(car)
model5dyna_bg <- rep(NA,152)
# Breusch-Godfrey can be performed up to order:
# (sample size) - (number of estimated parameters) = 158-6 = 152
for (i in 1:152) {
model5dyna_bg[i]= bgtest(model5dyna, order=i)$p.value
}
which(model5dyna_bg < 0.05)
model5dyna_bg
vif(model5dyna)
library(lmtest)
model5dyna_bg <- rep(NA,152)
# Breusch-Godfrey can be performed up to order:
# (sample size) - (number of estimated parameters) = 158-6 = 152
for (i in 1:152) {
model5dyna_bg[i]= bgtest(model5dyna, order=i)$p.value
}
which(model5dyna_bg < 0.05)
model5dyna_bg
vif(model5dyna)
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of model 5")
qqline(model5$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5), start = 1953, frequency = 3)
plot(consTS,col="red",main = "Fig 2: fitted model and original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("cons", "fit"),
col=c("red","blue"),lty=c(1,1),cex=0.5)
# Estimated residuals of model 5
plot(model5$residuals,type="p",main="Fig 3: Estimated residuals of model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5),main="Fig 4: Cook’s distances of model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of model 5")
# ACF of the estimated residuals of model 5
acf(model5$residuals, main = "Fig 6: ACF of the estimated residuals of model 5")
#fitted model and original time series
fit <- ts(predict(model5), start = 1953, frequency = 3)
plot(consTS,col="red",main = "Fig 2: fitted model and original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("cons", "fit"),
col=c("red","blue"),lty=c(1,1),cex=0.5)
# Estimated residuals of model 5
plot(model5$residuals,type="p",main="Fig 3: Estimated residuals of model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5),main="Fig 4: Cook’s distances of model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of model 5")
# ACF of the estimated residuals of model 5
acf(model5$residuals, main = "Fig 6: ACF of the estimated residuals of model 5")
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of model 5")
qqline(model5$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5), start = 1953, frequency = 3)
plot(consTS,col="red",main = "Fig 2: fitted model and original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("cons", "fit"),
col=c("red","blue"),lty=c(1,1),cex=0.5)
# Estimated residuals of model 5
plot(model5$residuals,type="p",main="Fig 3: Estimated residuals of model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5),main="Fig 4: Cook’s distances of model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of model 5")
# ACF of the estimated residuals of model 5
acf(model5$residuals, main = "Fig 6: ACF of the estimated residuals of model 5")
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5D$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5D$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5D, start = 1953, frequency = 3))
plot(ts(consD),col="red",main = "Fig 2: differenced fitted model and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5D$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5D),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5D$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5D$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5D$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5D$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5D, start = 1953, frequency = 3))
plot(ts(consD),col="red",main = "Fig 2: differenced fitted model and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5D$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5D),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5D$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5D$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5D$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5D$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5D, start = 1953, frequency = 3))
plot(ts(consD),col="red",main = "Fig 2: differenced fit and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5D$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5D),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5D$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5D$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5dyna$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of differenced model 5")
qqline(model5dyna$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5dyna, start = 1953, frequency = 3))
plot(ts(cons),col="red",main = "Fig 2: differenced fitted model and differenced original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5dyna$residuals,type="p",main="Fig 3: Estimated residuals of differenced model 5",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5dyna),main="Fig 4: Cook’s distances of differenced model 5",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5dyna$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of differenced model 5")
# ACF of the estimated residuals of model 5
acf(model5dyna$residuals, main = "Fig 6: ACF of estimated residuals of differenced model 5")
par(mfrow = c(3,2),mar = c(3, 3, 3, 3))
# Q-Q plot of the residuals of model
qqnorm(model5dyna$residuals,pch=16, main="Fig 1: Q-Q plot of the residuals of dynamic regression model")
qqline(model5dyna$residuals,col="red",lwd=2)
#fitted model and original time series
fit <- ts(predict(model5dyna, start = 1953, frequency = 3))
plot(ts(cons),col="red",main = "Fig 2: dynamic fitted model and dynamic original time series",xlab="Time",ylab="")
lines(fit,col="blue")
legend("topright", legend=c("differenced cons", "differenced fit"),
col=c("red","blue"),lty=c(1,1),cex=0.3)
# Estimated residuals of model 5
plot(model5dyna$residuals,type="p",main="Fig 3: Estimated residuals of dynamic regression model",ylab="Residuals",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
abline(0,0)
# Cook’s distances of model 5
plot(cooks.distance(model5dyna),main="Fig 4: Cook’s distances of dynamic regression model",ylab="Cook's distances",xlab="Year",pch=16,xaxt="n")
axis(1,at=seq(from=0,to=159,by=3),labels=seq(from=1953,to=2006,by=1))
# Estimated residuals of model 5
hist(model5dyna$residuals,xlab="Residuals",ylab="Frequency",main="Fig 5: Estimated residuals of dynamic regression model")
# ACF of the estimated residuals of model 5
acf(model5dyna$residuals, main = "Fig 6: ACF of estimated residuals of dynamic regression model")
?presidents
df <- data.frame(date = as.Date("2021-01-01") - 0:99,
sales = runif(100, 10, 500) + seq(50, 149)^2)
library(ggplot2)
df <- data.frame(date = as.Date("2021-01-01") - 0:99,
sales = runif(100, 10, 500) + seq(50, 149)^2)
#create time series plot
p <- ggplot(df, aes(x=date, y=sales)) +
geom_line()
p
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R")
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
plot(dataPresident)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
plot(dataPresident,col="red",main = "Fig 2: fitted model and original time series",xlab="Time",ylab="")
typeof(dataPresident)
dataPresident <- data("presidents")
typeof(dataPresident)
?presidents
data("presidents")
typeof(presidents)
plot(presidents,col="red",main = "Fig 2: fitted model and original time series",xlab="Time",ylab="")
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
?mean
# run Ctrl + Shift + Enter to run the entire Script
sd(presidents)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
?sd
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
df
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
approvalRatings
approvalRatings
typeof(approvalRatings)
?sd
std <- sd(approvalRatings, na.rm = TRUE)
std
mean(approvalRatings, na.rm = TRUE)
mode(approvalRatings, na.rm = TRUE)
mode(approvalRatings)
mode(approvalRatings)
?mode
median(approvalRatings)
median(approvalRatings, na.rm = TRUE)
sd(approvalRatings, na.rm = TRUE)
mean(approvalRatings, na.rm = TRUE)
median(approvalRatings, na.rm = TRUE)
?quantile
(quantile(approvalRatings, 0.25) + quantile(approvalRatings, 0.75))/2
(quantile(approvalRatings, 0.25, na.rm = TRUE) + quantile(approvalRatings, 0.75, na.rm = TRUE))/2
?range
range(approvalRatings)
range(approvalRatings, na.rm = TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
library(ggplot2)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/homework2.R", echo=TRUE)
source("~/Class Exercise Week 2.R", echo=TRUE)
source("~/Class Exercise Week 2.R", echo=TRUE)
source("~/Class Exercise Week 2.R", echo=TRUE)
source("~/Class Exercise Week 2.R", echo=TRUE)
source("~/Class Exercise Week 2.R", echo=TRUE)
data(rivers)
data(rivers)
hist(rivers, density = 10, xlab = 'Length (miles)', ylim = c(0,100), yaxt = 'n');axis(2, las = 2)
boxplot(rivers)
boxplot(rivers,outline = F)
#b
hist(rivers, density = 10, xlab = 'Length (miles)', ylim = c(0,100), yaxt = 'n');axis(2, las = 2)
lines(seq(0,4000, length.out = 1000), dexp(seq(0,4000,length.out = 1000), rate = 0.0015), lwd = 2, col = "blue")
source("~/Class Exercise Week 2.R", echo=TRUE)
source("~/Class Exercise Week 2.R", echo=TRUE)
a
barplot(table(a), yaxt = 'n', cex.names = 1.25, col = "blue");axis(2,las = 2)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 2/Class Exercise Week 2.R", echo=TRUE)
hist(islands, density = 10, xlab = 'Area(100 x miles^2', ylim = c(0,50), xlim = c(0,20000),
yaxt = 'n');axis(2, las = 2)
hist(islands, density = 10, xlab = 'Area(100 x miles^2', ylim = c(0,50), xlim = c(0,20000),
yaxt = 'n', breaks = 5);axis(2, las = 2)
hist(islands, density = 10, xlab = 'Area(100 x miles^2', ylim = c(0,50), xlim = c(0,20000),
yaxt = 'n', breaks = 5);axis(2, las = 2)
hist(islands, density = 10, xlab = 'Area(100 x miles^2', ylim = c(0,50), xlim = c(0,20000),
yaxt = 'n');axis(2, las = 2)
# or
dotchart(sort(islands), pch = 16, lcol = 'green')
out <- boxplot(islands, plot=F)$out
islands %in% out
isl <- islands(!islands %in% out)
dotchart(sort(islands), pch = 16, lcol = "blue")
abline(v = c(mean(islands), median(islands)), col = "red")
out <- boxplot(islands, plot=F)$out
islands %in% out
isl <- islands(!islands %in% out)
isl <- islands[!islands %in% out]
# is it correct?
out2 <- out[-order(out, decreasing = T)[8:8]]
t <- out[out != 840]
islands %in% out2
isl <- islands[!islands %in% out2]
b <- sort(islands, decreasing = T)[-c(1:7)]
mean(b)
median(b)
mean(b) / median(b)
sd(b)
mad(b)
dotchart(sort(b), pch = 16, lcol = "blue")
abline(v = c(mean(b), median(b)), col = "red")
# 3
Nile
plot(Nile, type = 'b', yaxt = 'n', ylab = 'water flow volume (10^8 m^3)', pch = 16);axis(2, las = 2)
summary(Nile)
library(psych)
install.packages("psych")
library(psych)
head(sleep)
str(sleep)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 5/Class Exercise Week 5.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
setwd("C:/Users/nguye/Desktop/Statistical Inference/Week 7")
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
setwd("C:/Users/nguye/Desktop/Statistical Inference/Week 7")
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
setwd("C:/Users/nguye/Desktop/Statistical Inference/Week 7")
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
source("C:/Users/nguye/Desktop/Statistical Inference/Week 7/Class Exercise Week 7.R", echo=TRUE)
